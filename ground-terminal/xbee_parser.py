import sys
import glob
import serial
import struct
import numpy as np
import csv
import matplotlib.pyplot as plt
RX_START = b'\x40'
RX_END   = b'\xB0'

def serial_ports():
    """ Lists serial port names

        :raises EnvironmentError:
            On unsupported or unknown platforms
        :returns:
            A list of the serial ports available on the system
    """
    if sys.platform.startswith('win'):
        ports = ['COM%s' % (i + 1) for i in range(256)]
    elif sys.platform.startswith('linux') or sys.platform.startswith('cygwin'):
        # this excludes your current terminal "/dev/tty"
        ports = glob.glob('/dev/tty[A-Za-z]*')
    elif sys.platform.startswith('darwin'):
        ports = glob.glob('/dev/tty.*')
    else:
        raise EnvironmentError('Unsupported platform')

    result = []
    for port in ports:
        try:
            s = serial.Serial(port)
            s.close()
            result.append(port)
        except (OSError, serial.SerialException):
            pass
    return result

print(serial_ports())
xbee = serial.Serial('COM4',115200)
f = open("FARFlight3.log", "a")
print(f)
fig = plt.plot()
while(1):
    #try:
        byte = xbee.read(1)
        if byte == RX_START:
            length = xbee.read(1)
            message = xbee.read(struct.unpack('B', length)[0] - 2)
            full_message = byte + length + message
            #try:
                # static pressure in Pa 
            time = struct.unpack('L', message[0:4])[0]
            pressure1 = struct.unpack('f', message[4:8])[0]   
            pressure2 = struct.unpack('f', message[8:12])[0] 
            altitude = (1-(((pressure1 + pressure2)/2)/101350)**0.190284) * 145366.45
            
            # acceleration in Gs
            mma_x = struct.unpack('f', message[12:16])[0]
            mma_y = struct.unpack('f', message[16:20])[0]

            bno_x = struct.unpack('f', message[20:24])[0],
            bno_y = struct.unpack('f', message[24:28])[0]
            bno_z = struct.unpack('f', message[28:32])[0]

            time_g = struct.unpack('Q',message[32:40])[0]
1607674918 2020.816247      94199      94123        0.0        0.0  -117.80931854248047    35.34764099121094    624.2000122070312        1495316805000     1     1
1608174724 2012.895196      94202      94175        0.0        0.0  -117.80931854248047    35.34764099121094    624.2000122070312        1495316806000     1     1
1608674918 2021.764499      94158      94159        0.0        0.0  -117.80931854248047    35.34764099121094    624.2000122070312        1495316806000     1     1
1609175003 2020.666883      94179      94145        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316807000     1     1
1609675354 2013.17915      94203      94172        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316807000     1     1
1610174724 2017.232819      94174      94173        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316808000     1     1
1610674639 2029.134167      94147      94118        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316808000     1     1
1611174724 2026.04215      94165      94122        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316809000     1     1
1611674918 2030.282993      94143      94114        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316809000     1     1
1612174725 2013.122585      94200      94176        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316810000     1     1
1612676742 2026.879638      94152      94129        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316810000     1     1
1613175003 2026.681581      94165      94117        0.0        0.0  -117.80931854248047    35.34764099121094    624.0999755859375        1495316811000     1     1
1613674918 2022.932312      94168      94140     -3.233  -147.6386  -117.80931854248047    35.34764099121094    624.0999755859375        1495316811000     1     1
1614176821 2160.639826      93689      93670        0.0   -171.347  -117.80931854248047    35.34764099121094    624.2999877929688        1495316811000     1     1
1614675147 2348.299594      93054      93019        0.0  -210.1425  -117.80931854248047    35.34764099121094    624.2999877929688        1495316811000     1     1
1615175218 2539.419266      92380      92390    -1.0777  -181.0458  -117.80931091308594    35.34763717651367    624.4000244140625        1495316812000     1     1
1615674722 2968.728241      90935      90935    -6.4659     -87.29  -117.80931091308594    35.34763717651367    624.4000244140625        1495316812000     1     1
1616175041 3207.830255      90175      90096     4.3106   -23.7084  -117.80914306640625   35.347801208496094    624.7000122070312        1495316814000     1     1
1617175445 4253.377314      86699      86712    10.7765    37.7179  -117.80906677246094    35.34788513183594                625.5        1495316815000     1     1
1617674639 5018.168145      84254      84274    14.0095    36.6402  -117.80906677246094    35.34788513183594                625.5        1495316815000     1     1
1618174726 5743.985753      82091      81907    10.7765    34.4849  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1618675358 6495.543928      79725      79687     9.6989    32.3296  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1619176810 6902.744943      78508      78462    10.7765    25.8637  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1619675358 7536.77398      76639      76591    12.9318     24.786  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1620174726 8025.353508      75234      75163    16.1648    22.6307  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1620674639 8507.323661      73841      73803    23.7084    22.6307  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1621175006 8980.494063      72530      72451    26.9413    21.5531  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1621675358 9461.978585      71156      71155     24.786    21.5531  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1622174727 9866.825016      70044      70053    23.7084    20.4754  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1622675358 10314.020583      68852      68833    22.6307    19.3978  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1623674639 11035.746279      66941      66920    14.0095    17.2425  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1624175445 11367.022799      66078      66058    16.1648    16.1648  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1624674639 11690.088918      65246      65224    12.9318    15.0872  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1625175006 12004.73049      64446      64418    12.9318    15.0872  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1625676478 12308.420075      63652      63677    12.9318    14.0095  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1626174709 12584.905603      62952      62994     7.5436    14.0095  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1626675440 12917.548673      62180      62115    -1.0777    14.0095  -117.80906677246094    35.34788513183594    626.0999755859375        1495316815000     0     1
1627176857 13178.302891      61512      61504    -6.4659    14.0095  -117.81332397460938    35.34307861328125    629.9000244140625        1495316824000     1     1
1628174723 13613.393822      60481      60421     -3.233    12.9318  -117.81332397460938    35.34307861328125    629.9000244140625        1495316824000     0     1
1628674919 13791.79764      60052      59992     2.1553    11.8542  -117.81332397460938    35.34307861328125    629.9000244140625        1495316824000     0     1
1629175427 14011.831301      59516      59477     2.1553    11.8542  -117.81332397460938    35.34307861328125    629.9000244140625        1495316824000     0     1
1629674919 14196.898403      59073      59042     4.3106    11.8542  -117.81332397460938    35.34307861328125    629.9000244140625        1495316824000     0     1
1630175003 14380.277344      58646      58603    -1.0777    11.8542  -117.80200958251953    35.34867477416992    629.9000244140625        1495316828000     1     1
1630674957 14576.756973      58176      58152     2.1553    10.7765  -117.80200958251953    35.34867477416992    629.9000244140625        1495316828000     1     1
1631675356 14920.803405      57375      57354    -4.3106    10.7765   -117.8015365600586   35.348838806152344               4601.5        1495316829000     1     1
1632177296 15058.847551      57058      57034    -2.1553    10.7765   -117.8010482788086   35.348899841308594      4684.2001953125        1495316830000     1     1
1632675357 15206.473303      56721      56694    -5.3883    10.7765   -117.8010482788086   35.348899841308594      4684.2001953125        1495316830000     1     1
1633674639 15428.751509      56208      56193    -1.0777     9.6989  -117.80067443847656    35.34894943237305      4779.2001953125        1495316831000     1     1
1634674919 15630.899316      55751      55733        0.0     9.6989  -117.80030059814453   35.348995208740234     4872.39990234375        1495316832000     1     1
1635174870 15733.904751      55530      55490    -1.0777     9.6989  -117.80030059814453   35.348995208740234     4957.39990234375        1495316832000     1     1
1636675006 15967.508739      55003      54969    -1.0777     8.6212   -117.7999267578125    35.34904479980469     5034.60009765625        1495316833000     1     1
1637174710 16031.539759      54856      54831    -1.0777     8.6212  -117.79960632324219   35.349063873291016      5109.2998046875        1495316834000     1     1
1637675443 16088.817404      54734      54698    -1.0777     8.6212  -117.79960632324219   35.349063873291016      5109.2998046875        1495316834000     1     1
1638676608 16176.004607      54543      54501    -1.0777     8.6212  -117.79927825927734   35.349063873291016               5180.5        1495316835000     1     1
1639175041 16205.392752      54473      54441    -1.0777     8.6212  -117.79859924316406    35.34918212890625     5246.39990234375        1495316837000     1     1
1639675356 16235.046726      54412      54372    -1.0777     8.6212  -117.79859924316406    35.34918212890625     5246.39990234375        1495316837000     1     1
1640176921 16245.046978      54380      54359    -1.0777     8.6212  -117.79828643798828    35.34921646118164     5175.89990234375        1495316838000     1     1
1640674639 16257.028321      54353      54332    -1.0777     8.6212  -117.79828643798828    35.34921646118164     5175.89990234375        1495316838000     1     1
            lat = struct.unpack('f',message[40:44])[0]
            lon = struct.unpack('f',message[44:48])[0]
            alt = struct.unpack('f',message[48:52])[0]
            lock = struct.unpack('?',message[52:53])[0]
            c = 0
            for b in full_message[0:(len(full_message)-2)]:
                c = c ^ b
            checkpassed = c == full_message[len(full_message)-2]
            data = [time, round(altitude,6), round(pressure1), round(pressure2), round(mma_x,4), round(mma_y,4), lat, lon, alt, time_g, lock, checkpassed]
            f.write(str(data))
            f.write("\n")
            f.close()
            f = open("FARFlight1.log", "a")
            print("{: >10} {: <10} {: >10} {: >10} {: >10} {: >10} {: >20} {: >20} {: >20} {: >20} {: >5} {: >5}".format(*data))
            #except:
                #print("Error Parsing")

    #except:
        #print("Error reading stream")




